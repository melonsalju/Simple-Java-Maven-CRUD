
import java.awt.HeadlessException;
import java.sql.*;
import java.sql.DriverManager;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
public class Index extends javax.swing.JFrame {
    
    String url = "jdbc:mysql://localhost:3306/mahasiswa?zeroDateTimeBehavior=CONVERT_TO_NULL";
    String user = "root";
    String password = "";
    
    private Statement st;
    private PreparedStatement pst;
    private ResultSet rs;
    private final Object[] columns = {"No.", "Nama", "NIM",
        "Jurusan", "Tempat Lahir", "Tanggal Lahir",
        "Alamat", "Jenis Kelamin", "Hobi",
        "Tinggi Badan", "Berat Badan"};
    DefaultTableModel table = new DefaultTableModel(null, this.columns);

    /**
     * Creates new form Index
     */
    public Index() {
        initComponents();
        this.getBiodatas();
    }
    
    private void getBiodatas() {
        try {
            Connection conn = DriverManager.getConnection(this.url, this.user, this.password);
            String q = "SELECT * FROM biodata";
            
            this.st = conn.createStatement();
            
            this.tabelBiodata.setModel(table);
            table.getDataVector().removeAllElements();
            table.fireTableDataChanged();
            this.rs = this.st.executeQuery(q);
            
            while (this.rs.next()) {
                Object[] data = {
                    rs.getString("id"),
                    rs.getString("nama"),
                    rs.getString("nim"),
                    rs.getString("jurusan"),
                    rs.getString("tpt_lahir"),
                    rs.getDate("tgl_lahir"),
                    rs.getString("alamat"),
                    rs.getString("jenis_kelamin"),
                    rs.getString("hobi"),
                    rs.getInt("tb"),
                    rs.getInt("bb"),
                };
                
                table.addRow(data);
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelBiodata = new javax.swing.JTable();
        goToForm = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        updateButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Tabel Biodata");

        tabelBiodata.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabelBiodata.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelBiodataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelBiodata);

        goToForm.setText("Form");
        goToForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                goToFormActionPerformed(evt);
            }
        });

        deleteButton.setText("Hapus");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });

        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(goToForm)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton)
                        .addGap(18, 18, 18)
                        .addComponent(updateButton)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(196, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(186, 186, 186))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(goToForm)
                    .addComponent(deleteButton)
                    .addComponent(updateButton))
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void goToFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_goToFormActionPerformed
        // TODO add your handling code here:
        Form form = new Form("");
        form.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_goToFormActionPerformed

    private void tabelBiodataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelBiodataMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabelBiodataMouseClicked

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:
        int[] selectedRows = this.tabelBiodata.getSelectedRows();
        
        if (selectedRows.length < 1) {
            JOptionPane.showMessageDialog(null, "Harap pilih data yang ingin dihapus pada tabel!");
            return;
        }
        
        try {
            Connection conn = DriverManager.getConnection(this.url, this.user, this.password);
            
            if ((JOptionPane.showConfirmDialog(null, "Apakah ada yakin ingin menghapus?", "konfirmasi", JOptionPane.YES_NO_OPTION)) == 0) {
                this.pst = conn.prepareStatement("DELETE FROM biodata WHERE id=?");
                
                for (int row : selectedRows) {
                    String id = table.getValueAt(row, 0).toString();
                    this.pst.setString(1, id);
                    this.pst.addBatch();
                }
                
                int[] rowsDeleted = this.pst.executeBatch();
                
                this.getBiodatas();
                
                if (rowsDeleted.length > 0) {
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus!");
                }
            }
        } catch (HeadlessException | SQLException e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        // TODO add your handling code here:
        if (this.tabelBiodata.getSelectedRows().length > 1) {
            JOptionPane.showMessageDialog(null, "Harap pilih 1 data saja!");
            return;
        }
        
        String id = table.getValueAt(this.tabelBiodata.getSelectedRow(), 0).toString();
        Form form = new Form(id);
        this.dispose();
        form.setVisible(true);
    }//GEN-LAST:event_updateButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Index.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Index().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton goToForm;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelBiodata;
    private javax.swing.JButton updateButton;
    // End of variables declaration//GEN-END:variables
}
